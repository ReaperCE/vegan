<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.vegan.magazine.dao.MagazineDAO">
<<<<<<< HEAD
	<!--  
	 <select id="list" resultType="com.vegan.magazine.dto.MagazineDTO">
	    SELECT 
			board_id, user_id, board_title, board_content, board_date, board_views, cat_id
		FROM board ORDER BY board_id DESC
	   </select>
	   -->
	 <select id="list" resultType="com.vegan.magazine.dto.MagazineDTO">
	    SELECT 
			board_id, user_id, board_title, board_content, board_date, board_views, cat_id
		FROM board ORDER BY board_id DESC
		LIMIT #{param1} OFFSET #{param2}
	 </select>
	 
	   <select id="magacommentlist" resultType="com.vegan.magazine.dto.MagazineDTO">
       SELECT 
         *
      FROM comment WHERE identify_id = #{param1} AND cat_id = 'mc' ORDER BY identify_id DESC
      </select>
	
	 <select id="magacommentlist2" resultType="com.vegan.magazine.dto.MagazineDTO">
       SELECT 
         *
      FROM comment WHERE identify_id = #{param1} AND comment_id = #{param2} AND cat_id = 'mc'
       ORDER BY identify_id DESC
      </select>
	 
	
	
	 <insert 
      id="commwrite" parameterType="String">
      INSERT INTO comment(identify_id, comment_content,user_id, cat_id)
         VALUES(#{param1},#{param2},#{param3},'mc')
   	</insert>
   	

	<delete id="commdelete">
	DELETE FROM comment WHERE identify_id = #{param1}  
		AND comment_id = #{param2} AND user_id = #{param3}
	</delete>
	
	<update id="commupdate" >
		UPDATE comment SET comment_content = #{param2}
		WHERE comment_id = #{param1} AND user_id = #{param3}
	</update>
	   
	<update id="update" parameterType="hashmap">
		UPDATE board SET board_title = #{board_title}
			,user_id = #{user_id}
			,board_content = #{board_content}
		WHERE board_id = #{board_id}
	</update>
	   
	 <select id="totalCount" resultType="int">
		SELECT COUNT(board_id) FROM board
	 </select>
	 
	  
	   
	   <!-- 조건 2 : generatedKey 옵션을 사용해야 한다. 
		useGeneratedKeys="true"
		keyColumn="idx"	<- 가져올 키 컬럼의 이름
		keyProperty="idx"	<- DTO 에 담을 필드 이름
	-->
	
	<insert 
		useGeneratedKeys="true"
		keyColumn="idx"
		keyProperty="board_id"
		id="write" parameterType="com.vegan.magazine.dto.MagazineDTO">
		INSERT INTO board(board_title, user_id, board_content, cat_id)
			VALUES(#{board_title},#{user_id},#{board_content},#{cat_id})
	</insert>
	
	<insert id="fileWrite">
		INSERT INTO photo(cat_id ,ori_photo_name, photo_name, identify_number)
			VALUES(#{cat_id},#{ori_photo_name},#{photo_name}, #{board_id})
	</insert>
	
	<update id="up_views">
		UPDATE board SET board_views = board_views+1	
			WHERE board_id = #{board_id}
	</update>
	
	<select id="detail" 
		resultType="com.vegan.magazine.dto.MagazineDTO">
		SELECT 
			b.board_id, b.user_id, b.board_title, b.board_content, b.board_date 
			,p.photo_id, p.photo_name
		FROM board b left JOIN photo p ON b.board_id = p.identify_number
		WHERE b.board_id = #{board_id}
	</select>
	
	<delete id="delete">
		DELETE FROM board WHERE board_id = #{board_id}
	</delete>
	
	<select id="findFile" resultType="String">
		SELECT photo_name FROM photo 
			WHERE identify_number = #{board_id}
	</select>
	
	
=======
   <!--  
    <select id="list" resultType="com.vegan.magazine.dto.MagazineDTO">
       SELECT 
         board_id, user_id, board_title, board_content, board_date, board_views, cat_id
      FROM board ORDER BY board_id DESC
      </select>
      -->
    <select id="list" resultType="com.vegan.magazine.dto.MagazineDTO">
       SELECT 
         board_id, user_id, board_title, board_content, board_date, board_views, cat_id
      FROM board ORDER BY board_id DESC
      LIMIT #{param1} OFFSET #{param2}
    </select>
    
    <select id="magacommentlist" resultType="com.vegan.magazine.dto.MagazineDTO">
       SELECT 
         *
      FROM comment WHERE identify_id = #{param1} AND cat_id = 'mc' ORDER BY identify_id DESC
      
    </select>
    
    <!--  
    <insert id="commwrite">
      INSERT INTO comment(user_id, comment_content, cat_id, identify_number)
         VALUES(#{user_id},#{comment_content}, 'mc', '#{board_id}')
   </insert>
   -->
   
   
   <insert 
      id="commwrite" parameterType="String">
      INSERT INTO comment(identify_id, comment_content,user_id, cat_id)
         VALUES(#{param1},#{param2},#{param3},'mc')
   </insert>
   
      
      
      
    <select id="totalCount" resultType="int">
      SELECT COUNT(board_id) FROM board
    </select>
    
     
      
      <!-- 조건 2 : generatedKey 옵션을 사용해야 한다. 
      useGeneratedKeys="true"
      keyColumn="idx"   <- 가져올 키 컬럼의 이름
      keyProperty="idx"   <- DTO 에 담을 필드 이름
   -->
   
   <insert 
      useGeneratedKeys="true"
      keyColumn="idx"
      keyProperty="board_id"
      id="write" parameterType="com.vegan.magazine.dto.MagazineDTO">
      INSERT INTO board(board_title, user_id, board_content, cat_id)
         VALUES(#{board_title},#{user_id},#{board_content},#{cat_id})
   </insert>
   
   <insert id="fileWrite">
      INSERT INTO photo(cat_id ,ori_photo_name, photo_name, identify_number)
         VALUES(#{cat_id},#{ori_photo_name},#{photo_name}, #{board_id})
   </insert>
   
   <update id="up_views">
      UPDATE board SET board_views = board_views+1   
         WHERE board_id = #{board_id}
   </update>
   
   <select id="detail" 
      resultType="com.vegan.magazine.dto.MagazineDTO">
      SELECT 
         b.board_id, b.user_id, b.board_title, b.board_content, b.board_date 
         ,p.photo_id, p.photo_name
      FROM board b left JOIN photo p ON b.board_id = p.identify_number
      WHERE b.board_id = #{board_id}
   </select>
   
   <delete id="delete">
      DELETE FROM board WHERE board_id = #{board_id}
   </delete>
   
   <select id="findFile" resultType="String">
      SELECT photo_name FROM photo 
         WHERE identify_number = #{board_id}
   </select>
   
   <update id="update" parameterType="hashmap">
      UPDATE board SET board_title = #{board_title}
         ,user_id = #{user_id}
         ,board_content = #{board_content}
      WHERE board_id = #{board_id}
   </update>
   
>>>>>>> origin/master
</mapper>